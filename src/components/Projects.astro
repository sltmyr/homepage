---
import { Image } from "astro:assets";
import aiveeImage from "../assets/aivee.png";
import opcalcImage from "../assets/trackgreeks.jpg";
import bmwImage from "../assets/cdh.png";
import pyneImage from "../assets/pyne-studio.png";
import mboardImage from "../assets/m-board.svg";

const projects = [
  {
    title: "Smart Pricing for Retail",
    description: `A web app tailored to retail merchants that automatically imports a merchant's stock and sales data to make automated, data-driven pricing decisions. The system uses a mixture of battle-tested industry heuristics, modern AI models, and data analytics to create recommendations for pricing and inventory planning. I was the main developer responsible for designing and implementing the entire application dealing with the data ingestion and processing, as well as the customer-facing web application.`,
    image: aiveeImage,
    link: "https://aivee.one",
    technologies: ["React", "TypeScript", "Next.js", "Supabase", "AWS"],
  },
  {
    title: "Stock Option Trading App",
    description: `A stock options trading platform helping traders optimize their investment strategies. I helped build two tools: a calculator that helped predict the profitability of certain stock option strategies and trades and a "scanner" that helped traders find profitable investment opportunities. As a full-stack lead engineer, I helped build these tools on a state-of-the-art tech stack. The main challenge was ensuring that large amounts of data were kept up to date and displaying them in a performant, user-friendly, and accessible web app.`,
    image: opcalcImage,
    link: "https://app.opcalc.com/",
    technologies: [
      "AWS",
      "Python",
      "PostgreSQL",
      "React",
      "TypeScript",
      "Next.js",
    ],
  },
  {
    title: "BMW's Cloud Native Data Lake",
    description: `I was part of the team building a data lake in the AWS Cloud, handling petabytes of data for the BMW Group. I worked as a full-stack developer on the data portal, a web app that enables everyone within the organization to share, find, understand, and work with data. The back end is based on an event-driven, serverless architecture in AWS using AppSync, Lambda, and DynamoDB. You can find a more detailed description of the project on the AWS blog.`,
    image: bmwImage,
    link: "https://aws.amazon.com/solutions/case-studies/bmw-group-case-study/",
    technologies: ["AWS", "Python", "Terraform", "ETL", "React", "GraphQL"],
  },
  {
    title: "Pyne Studio Online Shop",
    description:
      "Together with my wife, we launched a fashion brand and I built our custom home page and online shop as an Astro app with a small serverless back end hosted on AWS that uses Stripe as a payment processor.",
    image: pyneImage,
    link: "https://pyne.studio/",
    technologies: ["Astro", "Stripe", "Tailwind"],
  },
  {
    title: "Multichannel Solution for Retail",
    description:
      "An app that allows fashion retailers to sell their stock on various online channels like Amazon and Zalando. It takes care of stock upload, order processing, and smart pricing. The app was already running when I came into the project, and I was responsible for evolving its architecture to be more reliable and cost-efficient. I then took care of operations and added new features.",
    image: mboardImage,
    link: "https://michelberger.digital/products/m-board",
    technologies: ["AWS", "Python", "Elasticsearch", "ETL"],
  },
];
---

<section id="projects" class="py-20 overflow-hidden">
  <h2 class="mx-auto px-4 md:px-6 text-xl font-bold lg:mb-20 max-w-prose">
    These are a few of the projects I worked on in the 10 years I've been
    working as a professional software engineer.
  </h2>

  <div class="space-y-16 lg:space-y-32">
    {
      projects.map((project, index) => (
        <div
          class={`flex flex-col lg:!flex-row ${
            index % 2 === 0 ? "" : "lg:!flex-row-reverse"
          }`}
        >
          <div class="w-full lg:!w-1/2 flex flex-col justify-center gap-8 px-8 py-16">
            <h3 class="text-3xl lg:text-5xl font-bold text-center max-w-prose mx-auto">
              {project.title}
            </h3>
            <p class="text-lg max-w-prose mx-auto font-serif leading-relaxed">
              {project.description}
            </p>

            <div class="flex flex-wrap gap-3 justify-center max-w-prose mx-auto">
              {project.technologies.map((tech) => (
                <span class="px-4 py-2 bg-accent text-secondary text-sm font-medium rounded-full">
                  {tech}
                </span>
              ))}
            </div>

            <a
              href={project.link}
              target="_blank"
              rel="noopener noreferrer"
              class="mx-auto flex items-center justify-center gap-2 px-6 py-3 bg-primary text-secondary font-medium rounded-lg hover:bg-tertiary transition-colors"
            >
              <span>Visit</span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="w-5 h-5"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                <polyline points="15 3 21 3 21 9" />
                <line x1="10" y1="14" x2="21" y2="3" />
              </svg>
            </a>
          </div>

          <div
            class={`ipad-container w-full sm:w-5/6 lg:!w-1/2 lg:h-80 xl:h-auto transition-all duration-700 ease-out relative bg-gradient-to-br from-gray-100 to-white rounded-3xl p-3 sm:p-6 lg:p-8 shadow-2xl shadow-black/10 max-w-2xl  ${
              index % 2 === 0
                ? "slide-from-right translate-x-48 lg:rounded-r-none lg:-mr-8 lg:ml-auto"
                : "slide-from-left -translate-x-48 lg:rounded-l-none lg:-ml-8 lg:mr-auto"
            }`}
          >
            <div
              class={`absolute inset-0 rounded-3xl shadow-[inset_0_2px_4px_rgba(255,255,255,0.8),inset_0_-2px_4px_rgba(0,0,0,0.1)] ${
                index % 2 === 0 ? "lg:rounded-r-none" : "lg:rounded-l-none"
              }`}
            />

            <div class="bg-black rounded-2xl p-[3px] shadow-[inset_0_3px_12px_rgba(0,0,0,0.4)] h-full">
              <div class="bg-white rounded-xl overflow-hidden h-full shadow-lg">
                {/* <img
                  src={project.image}
                  alt={project.title}
                  class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
                /> */}
                <Image
                  src={project.image}
                  alt={project.title}
                  width={1000}
                  height={1000}
                  densities={[1, 2]}
                  class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
                  loading="eager"
                />
              </div>
            </div>
          </div>
        </div>
      ))
    }
  </div>
</section>

<script>
  // Intersection Observer for scroll-triggered animations
  const observerOptions = {
    threshold: 0.2,
    rootMargin: "0px 0px -100px 0px",
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        const ipadContainer = entry.target as HTMLElement;
        const index = parseInt(ipadContainer.dataset.projectIndex || "0");

        setTimeout(() => {
          ipadContainer.classList.remove("-translate-x-48", "translate-x-48");
        }, index * 200);

        observer.unobserve(ipadContainer);
      }
    });
  }, observerOptions);

  document.addEventListener("DOMContentLoaded", () => {
    const ipadContainers = document.querySelectorAll(".ipad-container");
    ipadContainers.forEach((container) => {
      observer.observe(container);
    });
  });
</script>
